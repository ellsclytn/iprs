name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  tag-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Semver release
        uses: cocogitto/cocogitto-action@v3
        id: release
        with:
          release: true
          git-user: "Cog Bot"
          git-user-email: "iprs@ellis.codes"
          check-latest-tag-only: true

      - name: Print version
        run: "echo '${{ steps.release.outputs.version }}'"

  create-release:
    needs: tag-version
    if: needs.tag-version.outputs.version != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.tag-version.outputs.version }}
      - name: Create release
        uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/tags/${{ needs.tag-version.outputs.version }}

  upload-assets:
    needs: [tag-version, create-release]
    if: needs.tag-version.outputs.version != ''
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: universal-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: iprs
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/tags/${{ needs.tag-version.outputs.version }}
